package(default_visibility = ["//visibility:public"])

load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "health.go",
        "main.go",
        "syncer.go",
    ],
    importpath = "github.com/googlecloudrobotics/core/src/go/cmd/cr-syncer",
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_googlecloudrobotics_ilog//:go_default_library",
        "@com_github_motemen_go_loghttp//:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@io_k8s_apiextensions_apiserver//pkg/apis/apiextensions/v1:go_default_library",
        "@io_k8s_apiextensions_apiserver//pkg/client/clientset/clientset:go_default_library",
        "@io_k8s_apiextensions_apiserver//pkg/client/informers/externalversions:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime/schema:go_default_library",
        "@io_k8s_apimachinery//pkg/watch:go_default_library",
        "@io_k8s_client_go//dynamic:go_default_library",
        "@io_k8s_client_go//rest:go_default_library",
        "@io_k8s_client_go//tools/cache:go_default_library",
        "@io_k8s_client_go//util/workqueue:go_default_library",
        "@io_k8s_klog//:go_default_library",
        "@io_opencensus_go//plugin/ochttp:go_default_library",
        "@io_opencensus_go//stats:go_default_library",
        "@io_opencensus_go//stats/view:go_default_library",
        "@io_opencensus_go//tag:go_default_library",
        "@io_opencensus_go//zpages:go_default_library",
        "@io_opencensus_go_contrib_exporter_prometheus//:go_default_library",
        "@org_golang_x_net//context:go_default_library",
        "@org_golang_x_oauth2//:go_default_library",
        "@org_golang_x_oauth2//google:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = [
        "health_test.go",
        "main_test.go",
        "syncer_test.go",
    ],
    embed = [":go_default_library"],
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_google_go_cmp//cmp:go_default_library",
        "@com_github_onsi_gomega//:go_default_library",
        "@io_k8s_apiextensions_apiserver//pkg/apis/apiextensions/v1:go_default_library",
        "@io_k8s_apiextensions_apiserver//pkg/client/clientset/clientset/fake:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime/schema:go_default_library",
        "@io_k8s_apimachinery//pkg/watch:go_default_library",
        "@io_k8s_client_go//dynamic/fake:go_default_library",
        "@io_k8s_client_go//testing:go_default_library",
        "@io_k8s_client_go//tools/cache:go_default_library",
        "@io_k8s_client_go//util/workqueue:go_default_library",
    ],
)

load("@rules_oci//oci:defs.bzl", "oci_image")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

go_binary(
    name = "cr-syncer-app",
    embed = [":go_default_library"],
    visibility = ["//visibility:private"],
)

pkg_tar(
    name = "cr-syncer-image-layer",
    srcs = [":cr-syncer-app"],
)

oci_image(
    name = "cr-syncer-image",
    base = "@distroless_base",
    entrypoint = ["/cr-syncer-app"],
    tars = [":cr-syncer-image-layer"],
    visibility = ["//visibility:public"],
)
