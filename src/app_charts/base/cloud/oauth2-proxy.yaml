apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
    spec:
      containers:
      - name: oauth2-proxy
        args:
        - --provider=google
        - --email-domain=*
        - --upstream=http://token-vendor.default.svc.cluster.local/apis/core.token-vendor/
        - --upstream=https://{{ .Values.domain }}/
        - --http-address=0.0.0.0:80
        - --pass-access-token
        - --pass-host-header
        - "--scope=https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
        - --cookie-expire=1h
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: {{ .Values.oauth2_proxy.client_id }}
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: {{ .Values.oauth2_proxy.client_secret }}
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: {{ .Values.oauth2_proxy.cookie_secret }}
        image: docker.io/a5huynh/oauth2_proxy:2.2.1
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: oauth2-proxy
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: oauth2-proxy
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/apis"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"  # seconds
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - {{ .Values.domain }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: /web-apis
        backend:
          serviceName: oauth2-proxy
          servicePort: http
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: oauth2-proxy-interactive
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - {{ .Values.domain }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: "/oauth2"
        backend:
          serviceName: oauth2-proxy
          servicePort: http
