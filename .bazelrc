# Toolchain flags
# Recommended by https://github.com/grailbio/bazel-toolchain/blob/0.7.2/README.md
build --incompatible_enable_cc_toolchain_resolution

# Enforce stricter environment rules, which eliminates some non-hermetic
# behavior and therefore improves both the remote_cache cache hit rate and the
# correctness and repeatability of the build.
build --incompatible_strict_action_env=true

# Make sure that no regressions are introduced until the flag is flipped
# See: https://github.com/bazelbuild/bazel/issues/8195
build --incompatible_disallow_empty_glob

# Always use the pre-configured toolchain.
build --action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1

# Set a higher timeout value, just in case.
build --remote_timeout=3600

build:remote --remote_executor=grpcs://remotebuildexecution.googleapis.com
build:remote_cache --remote_cache=grpcs://remotebuildexecution.googleapis.com

# Enable authentication. This will pick up application default credentials by
# default. You can use --google_credentials=some_file.json to use a service
# account credential instead.
build:remote       --google_default_credentials=true
build:remote_cache --google_default_credentials=true

# Platform flags
# The toolchain container used for execution is defined in the target indicated
# by "extra_execution_platforms", "host_platform" and "platforms".
# More about platforms: https://docs.bazel.build/versions/master/platforms.html
build:remote --extra_execution_platforms=//bazel/rbe_config/config:platform
build:remote --extra_toolchains=//bazel/rbe_config/java:all
build:remote --host_platform=//bazel/rbe_config/config:platform
build:remote --platforms=//bazel/rbe_config/config:platform
build:remote --define=EXECUTOR=remote

# Don't run integration tests and tests that need docker by default
test --test_tag_filters="-external,-requires-docker"
