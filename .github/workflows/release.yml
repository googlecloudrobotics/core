name: Create release

on:
  schedule:
    - cron: "0 5 * * *" # Once a day at 5am.
  # Manual runs through Actions tab in the UI
  workflow_dispatch:

permissions:
  actions: read
  contents: write
  id-token: write
  pull-requests: read

# Cancel previous runs if a new one is started.
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  USE_BAZEL_VERSION: "6.3.2"

jobs:
  create_release:
    runs-on: ubuntu-22.04
    steps:
      # Check out repo at latest green postsubmit commit on the main branch.
      # - name: Get latest passing commit
      #   id: latest-green
      #   env:
      #     REPO: ${{ github.repository }}
      #   run: |
      #     set -euo pipefail
      #     output=$(curl --fail-with-body -sS \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
      #       "https://api.github.com/repos/$REPO/actions/workflows/postsubmit.yml/runs?per_page=1&branch=main&status=success")
      #     sha=$(jq -r '.workflow_runs[0].head_sha' <<< $output)
      #     echo "latest_green=$sha" >> $GITHUB_OUTPUT
      - name: Checkout repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # tag=v3.2.0
        # with:
        #   ref: ${{ steps.latest-green.outputs.latest_green }}
      - name: Auth
        uses: google-github-actions/auth@5a50e581162a13f4baa8916d01180d2acbc04363 # tag=v2.1.0
        with:
          create_credentials_file: true # also sets GOOGLE_APPLICATION_CREDENTIALS
          # service_account: "github-automation-bot@gha-crc-prod.iam.gserviceaccount.com"
          # workload_identity_provider: "projects/695270090783/locations/global/workloadIdentityPools/github-automation/providers/crc-prod"
          service_account: "github-automation-bot@gha-crc-dev.iam.gserviceaccount.com"
          workload_identity_provider: "projects/1043719249528/locations/global/workloadIdentityPools/github-automation/providers/crc-dev"

      - name: Deploy Navtest on Cloud Build
        run: |
<<<<<<< HEAD
          gcloud auth activate-service-account --key-file robco_navtest_credentials.json
          gcloud builds submit \
            --project robco-navtest \
            --config .github/ci/deploy_navtest_cloudbuild.yaml
=======
          set -euo pipefail

          # # Set up gke-cloud-auth-plugin in order to allow for
          # # `gcloud container clusters get-credentials`
          # # From https://cloud.google.com/sdk/docs/install#deb
          # echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" \
          #   | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list >/dev/null
          # curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          # sudo apt-get update -y
          # sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

          ./.github/ci/deploy_navtest.sh
>>>>>>> c9b9e15 (export)

      # Now we are ready to create the release.
      - name: Run release_binary.sh
        env:
          REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FULL_SHA: ${{ steps.latest-green.outputs.latest_green }}
        run: ./.github/ci/release_binary.sh
